name: CI

on:
  push:
    branches:
    - master
    paths-ignore:
    - 'README.md'
    - 'k8s/**'
    - 'perftest/**'
    - 'LICENSE'
    - 'CODE_OF_CONDUCT.md'
  pull_request:
    branches:
    - master
    paths-ignore:
    - 'README.md'
    - 'k8s/**'
    - 'perftest/**'
    - 'LICENSE'
    - 'CODE_OF_CONDUCT.md'
jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: elixir:1.9.1-slim
    services:
      postgres:
        image: postgres:10.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: liquid_voting_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Run Tests
      run: mix test
      env:
        MIX_ENV: test
        # refers to the service name, since we're running on containers
        POSTGRES_HOST: postgres

  build-publish:
    needs: [tests]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: docker.pkg.github.com/${{ github.repository }}/image
      TAG: ${{ github.sha }}
    steps:
    - uses: actions/checkout@v1
    - name: Build Image
      run: |
        docker build -t $IMAGE_NAME:$TAG .
        docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
    - name: Login to Github Registry
      uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: $GITHUB_ACTOR
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish Image
      run: |
        docker push $IMAGE_NAME
