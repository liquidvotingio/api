name: CI

on:
  pull_request:
    branches:
    - master
    paths-ignore:
    - 'README.md'
    - 'LICENSE'
    - 'CODE_OF_CONDUCT.md'
    - 'CONTRIBUTING.md'

jobs:
  scan:
    name: Static Security Scan
    runs-on: ubuntu-latest
    container:
      image: elixir:1.10.2-slim
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Run Scan
      run: |
        echo Scroll to bottom of this log for details, if CI fails this job.
        echo
        result=$(mix sobelow)
        echo "$result"
        echo ::set-env name=SCAN_COUNTER::$(echo "$result" | grep -o 'Confidence' | wc -l)
    - name: Evaluate Scan Results
      if: ${{ env.SCAN_COUNTER != 0 }}
      run: exit 1

  tests:
    name: Tests
    runs-on: ubuntu-latest
    container:
      image: elixir:1.10.2-slim
    services:
      postgres:
        image: postgres:10.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: liquid_voting_test
        ports:
          - 5432:5432
        # postgres container doesn't provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Run Tests
      run: mix test
      env:
        MIX_ENV: test
        # refers to the service name, since we're running on containers
        POSTGRES_HOST: postgres

  linting:
    name: Linting
    runs-on: ubuntu-latest
    container:
      image: elixir:1.10.2-slim
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Run Formatter
      run: mix format --check-formatted
